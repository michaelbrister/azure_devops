trigger:
  - main

stages:
- stage: Build
  displayName: Build and Push Docker Images
  jobs:
  - job: Build
    steps:
    - task: Docker@2
      displayName: Build and Push React Image
      inputs:
        command: buildAndPush
        repository: react-app
        dockerfile: react/Dockerfile
        containerRegistry: my-acr-service-connection
        tags: latest
    
    - task: Docker@2
      displayName: Build and Push Solr Image
      inputs:
        command: buildAndPush
        repository: solr
        dockerfile: solr/Dockerfile
        containerRegistry: my-acr-service-connection
        tags: latest

- stage: Deploy
  displayName: Deploy Infrastructure and Containers
  jobs:
  - job: Deploy
    steps:
    - task: TerraformInstaller@0
      displayName: Install Terraform
      inputs:
        terraformVersion: 'latest'

    - script: |
        terraform init
        terraform apply -auto-approve
      displayName: Apply Terraform

    - task: AzureCLI@2
      displayName: Deploy Containers
      inputs:
        azureSubscription: my-azure-service-connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az container create --resource-group my-resource-group --name react-container-group \
            --image myacr.azurecr.io/react-app:latest --cpu 0.5 --memory 1.5 --ports 80
          
          az container create --resource-group my-resource-group --name solr-container-group \
            --image myacr.azurecr.io/solr:latest --cpu 1 --memory 2 --ports 8983 \
            --azure-file-volume-account-name solrstorageacct --azure-file-volume-account-key $(az storage account keys list --resource-group my-resource-group --account-name solrstorageacct --query '[0].value' --output tsv) \
            --azure-file-volume-share-name solrshare --azure-file-volume-mount-path /var/solr
